import{_ as s}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as n,c as a,f as e}from"./app-uZEI-F7F.js";const o={},p=e(`<h1 id="quasar-主题色改变-vite-plugin" tabindex="-1"><a class="header-anchor" href="#quasar-主题色改变-vite-plugin" aria-hidden="true">#</a> Quasar 主题色改变（vite-plugin）</h1><p>有些时候，我们希望能够让用户自定义网页的主题色，对于 Quasar 来说，特别是 <code>primary</code>。更进一步，我们希望主题色分为多阶（好比提供的 <code>red-1</code>，<code>red-2</code> 系列），均能同步改变。</p><p>Quasar 提供了 <code>getCssVar</code> 和 <code>setCssVar</code> 两个设置 CSS 变量的函数，其效果是在 DOM 根结点的 style 加上对应的变量声明。</p><p>例如 <code>setCssVar(&quot;primary&quot;, &quot;red&quot;)</code>，那么它会设置 <code>--q-primary: red</code>，加上一个 <code>--q-</code> 前缀。这样所有的 primary color 都会变成设定的颜色。</p><p>在组件中设置 <code>color=&quot;foo&quot;</code> 的原理大致是：附加了一个 <code>.foo</code> 的 class，这个 class 实现了 <code>color: x</code> 或 <code>color: --q-x</code>。设置 <code>bg-color</code> 同理。</p><p>为了实现 <code>color=&quot;primary-1&quot;</code> 的效果，就需要创建一个 <code>.primary-1</code> 的 class，而它的颜色值为一个变量，可以通过 <code>setCssVar</code> 来设置。<br> 产生色阶的一个最简单方法就是调亮度， <code>quasar</code> 提供的是 <code>lighten</code>，其作用和 CSS 的类似，将一个颜色按百分比调亮。</p><p>如果要实现 <code>.primary-1</code> 到 <code>.primary-10</code> 怎么办？我们使用的是 SCSS，它有循环功能：</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token keyword">@for</span> <span class="token variable">$var</span> <span class="token keyword">from</span> 1 <span class="token keyword">through</span> <span class="token selector">10 </span><span class="token punctuation">{</span>
  <span class="token selector">.primary-<span class="token variable">#{$var}</span> </span><span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--q-primary-<span class="token variable">#{$var}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token selector">.bg-primary-<span class="token variable">#{$var}</span> </span><span class="token punctuation">{</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--q-primary-<span class="token variable">#{$var}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>相应地，在设置颜色的地方，也可以用循环来赋值：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setCssVar</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">primary-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token function">lighten</span><span class="token punctuation">(</span>color<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">7</span> <span class="token operator">-</span> i<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>因为 primary 或 secondary 就代表了主题色，如果要让某些元素的颜色随主题色，用自定义的 <code>primary-1</code> 之类的色值就好了。</p>`,11),t=[p];function c(r,i){return n(),a("div",null,t)}const d=s(o,[["render",c],["__file","vite-quasar-theme.html.vue"]]);export{d as default};
