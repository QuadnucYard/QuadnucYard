import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as e,o as p,c as o,b as n,d as s,e as c,f as l}from"./app-ldXjDHQV.js";const i={},u=n("h1",{id:"c-监听excel表格更改",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#c-监听excel表格更改","aria-hidden":"true"},"#"),s(" C# 监听Excel表格更改")],-1),r=n("div",{class:"hint-container info"},[n("p",{class:"hint-container-title"},"需求"),n("p",null,"监听Excel表格的变化，每当有变化就执行表格处理操作。")],-1),d=n("code",null,"FileSystemWatcher",-1),k={href:"https://learn.microsoft.com/zh-cn/dotnet/api/system.io.filesystemwatcher?view=net-8.0#examples",target:"_blank",rel:"noopener noreferrer"},v=l(`<p>根据这里要监听的文件类型，修改如下参数：</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>watcher<span class="token punctuation">.</span>Filter <span class="token operator">=</span> <span class="token string">&quot;*.xlsx&quot;</span><span class="token punctuation">;</span>
watcher<span class="token punctuation">.</span>IncludeSubdirectories <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
watcher<span class="token punctuation">.</span>EnableRaisingEvents <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后运行，修改表格内容，会发现如下输出信息（完整路径略去）：</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>Renamed:
    Old: Effect.xlsx
    New: EE144302.tmp
Renamed:
    Old: 1C910100
    New: Effect.xlsx
Changed: Effect.xlsx
Changed: Effect.xlsx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意到特别之处了吗？文件内容变化时，Excel 会先转为一个临时文件，然后用另一个临时文件替换了原来的文件。而 <code>Changed</code> 事件会触发两次！因此监听 <code>Changed</code> 是不太管用的。<br> 而且，如果尝试调整 <code>NotifyFilter</code>，会发现它其实是 <code>NotifyFilters.Security</code> 触发的，是文件或文件夹的安全设置更改，并不是我们想要的。其他写入、大小更改等是无法被监听到的！<br> 而且考虑到两次 <code>Changed</code> 难以区分，这里只监听重命名事件 <code>Renamed</code>。</p><p>在回调函数，可以加一个过滤器，确保这个文件是有效的 xlsx，不是临时文件。</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>Name<span class="token punctuation">.</span><span class="token function">StartsWith</span><span class="token punctuation">(</span><span class="token string">&quot;~&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span>e<span class="token punctuation">.</span>Name<span class="token punctuation">.</span><span class="token function">EndsWith</span><span class="token punctuation">(</span><span class="token string">&quot;.xlsx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>完整代码如下：</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">ExcelWatcher</span>
<span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		Console<span class="token punctuation">.</span>ForegroundColor <span class="token operator">=</span> ConsoleColor<span class="token punctuation">.</span>Yellow<span class="token punctuation">;</span>
		Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Watching changes in </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">Config<span class="token punctuation">.</span>mExcelPath</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		Console<span class="token punctuation">.</span><span class="token function">ResetColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> watcher <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FileSystemWatcher</span><span class="token punctuation">(</span>Config<span class="token punctuation">.</span>mExcelPath<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// excel的更新是 rename 模式</span>
		watcher<span class="token punctuation">.</span>Renamed <span class="token operator">+=</span> OnRenamed<span class="token punctuation">;</span>

		watcher<span class="token punctuation">.</span>Filter <span class="token operator">=</span> <span class="token string">&quot;*.xlsx&quot;</span><span class="token punctuation">;</span>
		watcher<span class="token punctuation">.</span>IncludeSubdirectories <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
		watcher<span class="token punctuation">.</span>EnableRaisingEvents <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

		Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Press enter to exit.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		Console<span class="token punctuation">.</span><span class="token function">ReadLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnRenamed</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">RenamedEventArgs</span> e<span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token comment">// 过滤掉不是 excel 的文件</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>Name<span class="token punctuation">.</span><span class="token function">StartsWith</span><span class="token punctuation">(</span><span class="token string">&quot;~&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span>e<span class="token punctuation">.</span>Name<span class="token punctuation">.</span><span class="token function">EndsWith</span><span class="token punctuation">(</span><span class="token string">&quot;.xlsx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token punctuation">{</span>
			<span class="token keyword">return</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		Console<span class="token punctuation">.</span>ForegroundColor <span class="token operator">=</span> ConsoleColor<span class="token punctuation">.</span>DarkCyan<span class="token punctuation">;</span>
		Console<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;[</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">DateTime<span class="token punctuation">.</span>Now</span><span class="token punctuation">}</span></span><span class="token string">] &quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		Console<span class="token punctuation">.</span>ForegroundColor <span class="token operator">=</span> ConsoleColor<span class="token punctuation">.</span>Green<span class="token punctuation">;</span>
		Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Update: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">e<span class="token punctuation">.</span>Name</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		Console<span class="token punctuation">.</span><span class="token function">ResetColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// do something ...</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9);function m(b,h){const a=e("ExternalLinkIcon");return p(),o("div",null,[u,r,n("p",null,[s("C# 标准库有提供 "),d,s("，直接实现我们想要的监听功能。官方文档给出了"),n("a",k,[s("示例"),c(a)]),s("。")]),v])}const f=t(i,[["render",m],["__file","watch-excel.html.vue"]]);export{f as default};
