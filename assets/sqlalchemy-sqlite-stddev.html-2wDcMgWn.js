import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as t,c as p,f as n,b as s}from"./app-SLluY_-8.js";const l={},e=n('<h1 id="sqlalchemy-sqlite-统计标准差" tabindex="-1"><a class="header-anchor" href="#sqlalchemy-sqlite-统计标准差" aria-hidden="true">#</a> SQLAlchemy + SQLite 统计标准差</h1><div class="hint-container info"><p class="hint-container-title">需求</p><p>有两个数据表，主要字段如下：</p><ul><li><code>Food</code>: <code>id</code>, <code>name</code></li><li><code>Weigh</code>: <code>id</code>, <code>food_id</code>, <code>weight</code></li></ul><p>需要统计每个 <code>Food</code> 的 <code>weight</code> 的数量、平均数、标准差。</p></div><p>一个比较简单的思路是，先单用 <code>Weigh</code> 这张表，group by 得到每个 <code>food_id</code> 下的统计数据，然后再将这张表跟 <code>Food</code> join 一下得到最终的统计数据。</p><p>有个麻烦的问题是 SQLite 不支持求标准差，这里只能用定义来求了。</p>',4),c=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"σ"),s("mo",null,"="),s("msqrt",null,[s("mrow",null,[s("mfrac",null,[s("mn",null,"1"),s("mi",null,"N")]),s("munderover",null,[s("mo",null,"∑"),s("mrow",null,[s("mi",null,"i"),s("mo",null,"="),s("mn",null,"1")]),s("mi",null,"N")]),s("mo",{stretchy:"false"},"("),s("msub",null,[s("mi",null,"x"),s("mi",null,"i")]),s("mo",null,"−"),s("mi",null,"μ"),s("mo",{stretchy:"false"},")")])]),s("mo",null,"="),s("msqrt",null,[s("mrow",null,[s("mfrac",null,[s("mn",null,"1"),s("mi",null,"N")]),s("munderover",null,[s("mo",null,"∑"),s("mrow",null,[s("mi",null,"i"),s("mo",null,"="),s("mn",null,"1")]),s("mi",null,"N")]),s("msubsup",null,[s("mi",null,"x"),s("mi",null,"i"),s("mn",null,"2")]),s("mo",null,"−"),s("msup",null,[s("mi",null,"μ"),s("mn",null,"2")])])])]),s("annotation",{encoding:"application/x-tex"}," \\sigma = \\sqrt{\\frac{1}{N}\\sum_{i=1}^N(x_i - \\mu)} = \\sqrt{\\frac{1}{N}\\sum_{i=1}^N x_i^2 - \\mu^2} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"σ"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"3.3338em","vertical-align":"-1.2777em"}}),s("span",{class:"mord sqrt"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.0561em"}},[s("span",{class:"svg-align",style:{top:"-5.2938em"}},[s("span",{class:"pstrut",style:{height:"5.2938em"}}),s("span",{class:"mord",style:{"padding-left":"1.056em"}},[s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.3214em"}},[s("span",{style:{top:"-2.314em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N")])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.677em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.686em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mop op-limits"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.8283em"}},[s("span",{style:{top:"-1.8723em","margin-left":"0em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mrel mtight"},"="),s("span",{class:"mord mtight"},"1")])])]),s("span",{style:{top:"-3.05em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",null,[s("span",{class:"mop op-symbol large-op"},"∑")])]),s("span",{style:{top:"-4.3em","margin-left":"0em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10903em"}},"N")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.2777em"}},[s("span")])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"x"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"i")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord mathnormal"},"μ"),s("span",{class:"mclose"},")")])]),s("span",{style:{top:"-4.0161em"}},[s("span",{class:"pstrut",style:{height:"5.2938em"}}),s("span",{class:"hide-tail",style:{"min-width":"0.742em",height:"3.3738em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"400em",height:"3.3738em",viewBox:"0 0 400000 3373",preserveAspectRatio:"xMinYMin slice"},[s("path",{d:`M702 80H40000040
H742v3239l-4 4-4 4c-.667.7 -2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1
h-12l-28-84c-16.667-52-96.667 -294.333-240-727l-212 -643 -85 170
c-4-3.333-8.333-7.667-13 -13l-13-13l77-155 77-156c66 199.333 139 419.667
219 661 l218 661zM702 80H400000v40H742z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.2777em"}},[s("span")])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"3.3338em","vertical-align":"-1.2777em"}}),s("span",{class:"mord sqrt"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.0561em"}},[s("span",{class:"svg-align",style:{top:"-5.2938em"}},[s("span",{class:"pstrut",style:{height:"5.2938em"}}),s("span",{class:"mord",style:{"padding-left":"1.056em"}},[s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.3214em"}},[s("span",{style:{top:"-2.314em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N")])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.677em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.686em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mop op-limits"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.8283em"}},[s("span",{style:{top:"-1.8723em","margin-left":"0em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mrel mtight"},"="),s("span",{class:"mord mtight"},"1")])])]),s("span",{style:{top:"-3.05em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",null,[s("span",{class:"mop op-symbol large-op"},"∑")])]),s("span",{style:{top:"-4.3em","margin-left":"0em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10903em"}},"N")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.2777em"}},[s("span")])])])]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"x"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.7959em"}},[s("span",{style:{top:"-2.4231em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"i")])]),s("span",{style:{top:"-3.0448em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2769em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"μ"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.7401em"}},[s("span",{style:{top:"-2.989em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])])])])])])])]),s("span",{style:{top:"-4.0161em"}},[s("span",{class:"pstrut",style:{height:"5.2938em"}}),s("span",{class:"hide-tail",style:{"min-width":"0.742em",height:"3.3738em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"400em",height:"3.3738em",viewBox:"0 0 400000 3373",preserveAspectRatio:"xMinYMin slice"},[s("path",{d:`M702 80H40000040
H742v3239l-4 4-4 4c-.667.7 -2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1
h-12l-28-84c-16.667-52-96.667 -294.333-240-727l-212 -643 -85 170
c-4-3.333-8.333-7.667-13 -13l-13-13l77-155 77-156c66 199.333 139 419.667
219 661 l218 661zM702 80H400000v40H742z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.2777em"}},[s("span")])])])])])])])])],-1),i=n(`<p>代码如下：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">get_with_weight</span><span class="token punctuation">(</span>db<span class="token punctuation">:</span> AsyncSession<span class="token punctuation">)</span><span class="token punctuation">:</span>
    subq <span class="token operator">=</span> <span class="token punctuation">(</span>
        select<span class="token punctuation">(</span>
            Weigh<span class="token punctuation">.</span>food_id<span class="token punctuation">,</span>
            func<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>label<span class="token punctuation">(</span><span class="token string">&quot;weight_cnt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            func<span class="token punctuation">.</span>avg<span class="token punctuation">(</span>Weigh<span class="token punctuation">.</span>weight<span class="token punctuation">)</span><span class="token punctuation">.</span>label<span class="token punctuation">(</span><span class="token string">&quot;weight_avg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            func<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>
                func<span class="token punctuation">.</span>avg<span class="token punctuation">(</span>Weigh<span class="token punctuation">.</span>weight <span class="token operator">*</span> Weigh<span class="token punctuation">.</span>weight<span class="token punctuation">)</span> <span class="token operator">-</span> func<span class="token punctuation">.</span>avg<span class="token punctuation">(</span>Weigh<span class="token punctuation">.</span>weight<span class="token punctuation">)</span> <span class="token operator">*</span> func<span class="token punctuation">.</span>avg<span class="token punctuation">(</span>Weigh<span class="token punctuation">.</span>weight<span class="token punctuation">)</span>
            <span class="token punctuation">)</span><span class="token punctuation">.</span>label<span class="token punctuation">(</span><span class="token string">&quot;weight_std&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span>
        <span class="token punctuation">.</span>group_by<span class="token punctuation">(</span>Weigh<span class="token punctuation">.</span>food_id<span class="token punctuation">)</span>
        <span class="token punctuation">.</span>subquery<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
    stmt <span class="token operator">=</span> select<span class="token punctuation">(</span>Food<span class="token punctuation">,</span> subq<span class="token punctuation">.</span>c<span class="token punctuation">.</span>weight_cnt<span class="token punctuation">,</span> subq<span class="token punctuation">.</span>c<span class="token punctuation">.</span>weight_avg<span class="token punctuation">,</span> subq<span class="token punctuation">.</span>c<span class="token punctuation">.</span>weight_std<span class="token punctuation">)</span><span class="token punctuation">.</span>join_from<span class="token punctuation">(</span>Food<span class="token punctuation">,</span> subq<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">await</span> db<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>stmt<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里 select 语句中含有一堆列统计，不知道性能咋样。</p><p>尝试拆成两个 subquery：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>subq <span class="token operator">=</span> <span class="token punctuation">(</span>
    select<span class="token punctuation">(</span>
        Weigh<span class="token punctuation">.</span>food_id<span class="token punctuation">,</span>
        func<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>label<span class="token punctuation">(</span><span class="token string">&quot;weight_cnt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        func<span class="token punctuation">.</span>avg<span class="token punctuation">(</span>Weigh<span class="token punctuation">.</span>weight<span class="token punctuation">)</span><span class="token punctuation">.</span>label<span class="token punctuation">(</span><span class="token string">&quot;weight_avg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        func<span class="token punctuation">.</span>avg<span class="token punctuation">(</span>Weigh<span class="token punctuation">.</span>weight <span class="token operator">*</span> Weigh<span class="token punctuation">.</span>weight<span class="token punctuation">)</span><span class="token punctuation">.</span>label<span class="token punctuation">(</span><span class="token string">&quot;weight_sqr&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
    <span class="token punctuation">.</span>group_by<span class="token punctuation">(</span>Weigh<span class="token punctuation">.</span>food_id<span class="token punctuation">)</span>
    <span class="token punctuation">.</span>cte<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>
subq2 <span class="token operator">=</span> select<span class="token punctuation">(</span>
    subq<span class="token punctuation">.</span>c<span class="token punctuation">.</span>food_id<span class="token punctuation">,</span>
    subq<span class="token punctuation">.</span>c<span class="token punctuation">.</span>weight_cnt<span class="token punctuation">,</span>
    subq<span class="token punctuation">.</span>c<span class="token punctuation">.</span>weight_avg<span class="token punctuation">,</span>
    func<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>subq<span class="token punctuation">.</span>c<span class="token punctuation">.</span>weight_sqr <span class="token operator">-</span> subq<span class="token punctuation">.</span>c<span class="token punctuation">.</span>weight_avg <span class="token operator">*</span> subq<span class="token punctuation">.</span>c<span class="token punctuation">.</span>weight_avg<span class="token punctuation">)</span><span class="token punctuation">.</span>label<span class="token punctuation">(</span><span class="token string">&quot;weight_std&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">.</span>subquery<span class="token punctuation">(</span><span class="token punctuation">)</span>
stmt <span class="token operator">=</span> select<span class="token punctuation">(</span>Food<span class="token punctuation">,</span> subq2<span class="token punctuation">.</span>c<span class="token punctuation">.</span>weight_cnt<span class="token punctuation">,</span> subq2<span class="token punctuation">.</span>c<span class="token punctuation">.</span>weight_avg<span class="token punctuation">,</span> subq2<span class="token punctuation">.</span>c<span class="token punctuation">.</span>weight_std<span class="token punctuation">)</span><span class="token punctuation">.</span>join_from<span class="token punctuation">(</span>Food<span class="token punctuation">,</span> subq<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样能运行，但是会卡死，可能是语句写得有点问题。</p><p>所以还是放弃 SQLite 拥抱 PG 吧。</p>`,7),o=[e,c,i];function u(m,r){return t(),p("div",null,o)}const g=a(l,[["render",u],["__file","sqlalchemy-sqlite-stddev.html.vue"]]);export{g as default};
