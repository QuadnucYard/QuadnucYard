const t=JSON.parse(`{"key":"v-1549c29d","path":"/posts/python/matplotlib-latex-render.html","title":"使用 Matplotlib 渲染 Latex 公式","lang":"en-US","frontmatter":{"category":["python","matplotlib"],"tag":["latex","troubleshooting"],"isOriginal":true,"date":"2023-07-30T00:00:00.000Z","description":"使用 Matplotlib 渲染 Latex 公式 需求：将 Latex 公式转为图片，svg 或 png 格式。 其实我们熟悉的 matplotlib 就支持这个功能，可以应付一些简单的情况（复杂的后面说）。 基本用法 import matplotlib.font_manager as mfm from matplotlib.mathtext import math_to_image prop = mfm.FontProperties(math_fontfamily='stix', size=64, weight='bold') math_to_image(r\\"$\\\\sum_{i=1}^n i$\\", \\"path/to/output.svg\\", prop=prop, dpi=72)","head":[["meta",{"property":"og:url","content":"https://QuadnucYard.github.io/posts/python/matplotlib-latex-render.html"}],["meta",{"property":"og:title","content":"使用 Matplotlib 渲染 Latex 公式"}],["meta",{"property":"og:description","content":"使用 Matplotlib 渲染 Latex 公式 需求：将 Latex 公式转为图片，svg 或 png 格式。 其实我们熟悉的 matplotlib 就支持这个功能，可以应付一些简单的情况（复杂的后面说）。 基本用法 import matplotlib.font_manager as mfm from matplotlib.mathtext import math_to_image prop = mfm.FontProperties(math_fontfamily='stix', size=64, weight='bold') math_to_image(r\\"$\\\\sum_{i=1}^n i$\\", \\"path/to/output.svg\\", prop=prop, dpi=72)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-07-30T09:41:43.000Z"}],["meta",{"property":"article:author","content":"Stankle of QuadnucYard"}],["meta",{"property":"article:tag","content":"latex"}],["meta",{"property":"article:tag","content":"troubleshooting"}],["meta",{"property":"article:published_time","content":"2023-07-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-30T09:41:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"使用 Matplotlib 渲染 Latex 公式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-30T00:00:00.000Z\\",\\"dateModified\\":\\"2023-07-30T09:41:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Stankle of QuadnucYard\\",\\"url\\":\\"https://github.com/QuadnucYard\\"}]}"]]},"headers":[{"level":2,"title":"基本用法","slug":"基本用法","link":"#基本用法","children":[]},{"level":2,"title":"图片边界问题","slug":"图片边界问题","link":"#图片边界问题","children":[]},{"level":2,"title":"对输出图片做处理","slug":"对输出图片做处理","link":"#对输出图片做处理","children":[]},{"level":2,"title":"公式语法支持","slug":"公式语法支持","link":"#公式语法支持","children":[]},{"level":2,"title":"与公式识别结合","slug":"与公式识别结合","link":"#与公式识别结合","children":[]},{"level":2,"title":"把公式绘制画布上","slug":"把公式绘制画布上","link":"#把公式绘制画布上","children":[]}],"git":{"createdTime":1690710103000,"updatedTime":1690710103000,"contributors":[{"name":"QuadnucYard","email":"2380433991@qq.com","commits":1}]},"readingTime":{"minutes":3.73,"words":1119},"filePathRelative":"posts/python/matplotlib-latex-render.md","localizedDate":"July 30, 2023","excerpt":"<h1> 使用 Matplotlib 渲染 Latex 公式</h1>\\n<p>需求：将 Latex 公式转为图片，svg 或 png 格式。</p>\\n<p>其实我们熟悉的 matplotlib 就支持这个功能，可以应付一些简单的情况（复杂的后面说）。</p>\\n<h2> 基本用法</h2>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">import</span> matplotlib<span class=\\"token punctuation\\">.</span>font_manager <span class=\\"token keyword\\">as</span> mfm\\n<span class=\\"token keyword\\">from</span> matplotlib<span class=\\"token punctuation\\">.</span>mathtext <span class=\\"token keyword\\">import</span> math_to_image\\n\\nprop <span class=\\"token operator\\">=</span> mfm<span class=\\"token punctuation\\">.</span>FontProperties<span class=\\"token punctuation\\">(</span>math_fontfamily<span class=\\"token operator\\">=</span><span class=\\"token string\\">'stix'</span><span class=\\"token punctuation\\">,</span> size<span class=\\"token operator\\">=</span><span class=\\"token number\\">64</span><span class=\\"token punctuation\\">,</span> weight<span class=\\"token operator\\">=</span><span class=\\"token string\\">'bold'</span><span class=\\"token punctuation\\">)</span>\\nmath_to_image<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">r\\"$\\\\sum_{i=1}^n i$\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"path/to/output.svg\\"</span><span class=\\"token punctuation\\">,</span> prop<span class=\\"token operator\\">=</span>prop<span class=\\"token punctuation\\">,</span> dpi<span class=\\"token operator\\">=</span><span class=\\"token number\\">72</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{t as data};
